import React, { useState } from 'react';
import Popup from 'reactjs-popup';
import './GiveReviews.css'
// Function component for giving reviews
function GiveReviews() {
  // State variables using useState hook
  const [showModal, setShowModal] = useState(true);
  const [submittedMessage, setSubmittedMessage] = useState('');
  const [showWarning, setShowWarning] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    review: '',
    rating: 0,
  });
  // Function to handle form input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };


  // Function to handle form submission
  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.name && formData.review && formData.rating) {
      const message = `Name: ${formData.name}, Review: ${formData.review}, Rating: ${formData.rating}`;
      setSubmittedMessage(message);
      sessionStorage.setItem('reviewData', JSON.stringify(formData));
      // store the reviewData and the data in reviewDoc from session storage to the same item in local storage
      const reviewData = JSON.parse(sessionStorage.getItem('reviewData')) || {};
      const reviewDoc = JSON.parse(sessionStorage.getItem('reviewDoc')) || {};
      const pastReviewData = { reviewData, reviewDoc };
      localStorage.setItem('pastReviewData', JSON.stringify(pastReviewData));
      setShowWarning(false);
      window.location.href = '/reviews'; // Redirect to /reviews after submitting
    } else {
      setShowWarning(true);
    }
  };

  return (
    <Popup
      style={{ backgroundColor: '#FFFFFF' }}
      modal
      open={showModal}
      onClose={() => setShowModal(false)}
    >
    <div className='give-reviews-container'>
      <h2>Form with Message</h2>
        <form onSubmit={handleSubmit}>
          <h2>Give Your Feedback</h2>
          /* Display warning message if not all fields are filled */}
                {showWarning && <p className="warning">Please fill out all fields.</p>}
                <div>
                <label htmlFor="name">Name:</label>
                <input type="text" id="name" name="name" value={formData.name} onChange={handleChange} />
                </div>
                <div>
                <label htmlFor="review">Review:</label>
                <textarea id="review" name="review" value={formData.review} onChange={handleChange} />
                </div>
                <div>
                  <label htmlFor="rating">Rating:</label>
                  <select id="rating" name="rating" value={formData.rating} onChange={handleChange} required>
                  <option value="" disabled>Select a rating</option>
                  <option value="1">1</option>
                  <option value="2">2</option>
                  <option value="3">3</option>
                  <option value="4">4</option>
                  <option value="5">5</option>
                  </select>
                </div>
                {/* Submit button for form submission */}
          <button type="submit">Submit</button>
        </form>
      {/* Display the submitted message if available */}
      {submittedMessage && (
        <div>
          <h3>Submitted Message:</h3>
          <p>{submittedMessage}</p>
        </div>
      )}
    </div>
    </Popup>
  );
}
export default GiveReviews;